---
import ContentLinkCard from "@components/ContentLinkCard.astro";
import MarkdownLayout from "@layouts/MarkdownLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
    const blogEntries = await getCollection("blog");
    return blogEntries.map((entry) => {
        const sameKindPost = blogEntries.filter(
            (post) => post.data.page_kind === entry.data.page_kind,
        );
        const relatedPosts = sameKindPost
            .sort(
                (post1, post2) => post1.data.page_order - post2.data.page_order,
            )
            .map((post, i) => ({
                idx: i,
                slug: `/blog/${post.slug}`,
                title: post.data.title,
            }));
        const currentPost = relatedPosts.find(
            (post) => post.title === entry.data.title,
        );
        const prevPost = relatedPosts.find(
            (post) => post.idx == currentPost!.idx - 1,
        );
        const nextPost = relatedPosts.find(
            (post) => post.idx == currentPost!.idx + 1,
        );

        return {
            params: { slug: entry.slug },
            props: {
                entry,
                hasPrevPost: prevPost !== undefined,
                prevSlug: `${prevPost?.slug}`,
                prevTitle: `${prevPost?.title}`,
                hasNextPost: nextPost !== undefined,
                nextSlug: `${nextPost?.slug}`,
                nextTitle: `${nextPost?.title}`,
                relatedPosts: relatedPosts,
            },
        };
    });
}

const {
    entry,
    hasPrevPost,
    prevSlug,
    prevTitle,
    hasNextPost,
    nextSlug,
    nextTitle,
    relatedPosts,
} = Astro.props;
const { Content } = await entry.render();
---

<MarkdownLayout title={entry.data.title} posts={relatedPosts}>
    <Content />
    <div class="flex justify-between space-x-8">
        <div class="w-1/2">
            {
                hasPrevPost ? (
                    <ContentLinkCard
                        title={prevTitle}
                        link={prevSlug}
                        type="prev"
                    />
                ) : null
            }
        </div>
        <div class="w-1/2">
            {
                hasNextPost ? (
                    <ContentLinkCard
                        title={nextTitle}
                        link={nextSlug}
                        type="next"
                    />
                ) : null
            }
        </div>
    </div>
</MarkdownLayout>
